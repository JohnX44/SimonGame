const sounds = {
  red: new Audio('sounds/red.mp3'),
  blue: new Audio('sounds/blue.mp3'),
  yellow: new Audio('sounds/yellow.mp3'),
  green: new Audio('sounds/green.mp3'),
  wrong: new Audio('sounds/wrong.mp3') // Add a sound for the wrong answer
};

let gameStarted = false;   // To track if the game has started
let level = 0;             // Current level of the game
let gamePattern = [];      // Sequence generated by the game
let userPattern = [];      // Sequence entered by the user

// Start the game on keypress
$(document).keypress(function() {
  if (!gameStarted) {
    gameStarted = true;
    $("h1").text("Level " + level); // Show the level
    nextSequence();
  }
});

// Function to generate the next sequence
function nextSequence() {
  userPattern = []; // Reset the user's pattern for the new level
  level++;
  $("h1").text("Level " + level); // Update the level title

  // Get a random number between 0 and 3 and pick a corresponding color
  const randomIndex = Math.floor(Math.random() * 4);
  const colors = ['red', 'blue', 'yellow', 'green'];
  const randomChosenColor = colors[randomIndex];
  gamePattern.push(randomChosenColor); // Add the chosen color to the game pattern

  // Animate the chosen button and play its sound
  $("#" + randomChosenColor).addClass('blink');
  setTimeout(() => {
    $("#" + randomChosenColor).removeClass('blink');
  }, 300);
  
  sounds[randomChosenColor].play();
}

// Function to enable user clicks
function enableButton() {
  $('.btn').click(function() {
    const userChosenColor = $(this).attr('id'); // Get the id of the clicked button
    userPattern.push(userChosenColor); // Add the clicked color to the user's pattern
    playSound(userChosenColor);
    animatePress(userChosenColor);
    checkAnswer(userPattern.length - 1); // Check the user's answer after every click
  });
}

// Function to play sound for a given color
function playSound(color) {
  sounds[color].play();
}

// Function to animate the pressed button
function animatePress(currentColor) {
  $("#" + currentColor).addClass('pressed');
  setTimeout(() => {
    $("#" + currentColor).removeClass('pressed');
  }, 100);
}

// Function to check the user's answer
function checkAnswer(currentLevel) {
  if (userPattern[currentLevel] === gamePattern[currentLevel]) {
    if (userPattern.length === gamePattern.length) {
      setTimeout(() => {
        nextSequence(); // Call next sequence after a short delay
      }, 1000);
    }
  } else {
    // Game over logic
    playSound("wrong");
    $("body").addClass("game-over"); // Add game over styling
    $("h1").text("Game Over, Press Any Key to Restart");

    // Remove the game over styling after 200 milliseconds
    setTimeout(() => {
      $("body").removeClass("game-over");
    }, 200);

    startOver(); // Restart the game
  }
}

// Function to reset the game
function startOver() {
  gameStarted = false;
  level = 0;
  gamePattern = [];
  userPattern = [];
}

// Enable button clicks
enableButton();
